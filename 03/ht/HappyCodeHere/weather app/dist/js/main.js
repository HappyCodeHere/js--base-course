"use strict";function changeCurrentSchene(e){var r=document.querySelector(".active");switch(r.classList.remove("active"),e){case"welcome":var t=document.querySelector(".welcome-block");t.classList.add("active");break;case"forecast":var n=document.querySelector(".forecast-block");n.classList.add("active");break;case"error":var o=document.querySelector(".error-block");o.classList.add("active")}}function handleDocumentLoad(){var e=window.location.hash;if(e){var r=document.querySelector("header .search input");r.value=e.substring(1),loadData(e.substring(1))}loadHistoryFromStorage(localStorage)}function loadData(e){isFetch&&getForecastFetch(e)}function getForecastFetch(e){return new Promise(function(r,t){var n="AIzaSyDa7DCL2NO9KMPd9DYVk_u3u0wCbm0XXFY";fetch("https://maps.googleapis.com/maps/api/geocode/json?address="+e+"&key="+n).then(function(e){return e.json()}).then(function(r){if(0===r.results.length)throw new Error(r.status);var t=r.results[0].geometry.location,n=t.lat,o=t.lng;return e=r.results[0].formatted_address,fetch("https://shrouded-spire-35703.herokuapp.com/forecast/"+n+","+o+"?lang=en&units=si")}).then(function(e){return e.json()}).then(function(r){renderMainInformation(r,e),setTimeout(function(){changeCurrentSchene("forecast"),saveCityToHistory(e),renderSearchHistory(searchHistory)},100)})["catch"](function(e){handleApiError(e)})})}function handleApiError(e){var r=document.querySelector(".error-block");r.innerHTML+=e,changeCurrentSchene("error")}function renderMainInformation(e,r){var t=document.querySelector("section.main h2");t.innerHTML=r;var n=new Skycons({color:"#e6a831"});n.add(document.querySelector("section.main .forecast-icon"),e.currently.icon),n.play();var o=document.querySelector(".forecast-info span.temperature");o.innerHTML="Temperature: "+e.currently.temperature.toFixed(1)+"Â°C";var a=document.querySelector("section.main span.humidity");a.innerHTML="Humidity: "+e.currently.humidity+"%";var c=document.querySelector("section.main span.wind-speed");c.innerHTML="Wind speed: "+e.currently.windSpeed+"m/s";var i=document.querySelector(".summary p");i.innerHTML=e.currently.summary}function renderSearchHistory(e){var r=document.querySelector("section.history ul");r.innerHTML="";for(var t=0;t<e.length;t++)r.innerHTML+='<li class="list-group-item">'+e[t]+"</li>"}function saveCityToHistory(e){searchHistory[0]!==e&&(searchHistory.indexOf(e)>0&&searchHistory.splice(searchHistory.indexOf(e),1),searchHistory.length>4&&searchHistory.pop(),searchHistory.unshift(e),saveHistoryToStorage(localStorage,searchHistory))}function loadHistoryFromStorage(e){var r=e.getItem("forecast");searchHistory=JSON.parse(r)||[]}function saveHistoryToStorage(e,r){e.setItem("forecast",JSON.stringify(r))}var isFetch=!0,searchHistory=[];changeCurrentSchene("welcome"),handleDocumentLoad();var tougle=document.querySelector(".switcher input");tougle.addEventListener("change",function(){var e=event.target.checked,r=document.querySelector(".switcher span");e?r.innerHTML="Fetch":r.innerHTML="XHR"});var buttonSearch=document.querySelector("header button");buttonSearch.addEventListener("click",function(){var e=document.querySelector("header .search input"),r=e.value;loadData(r),window.location.hash=r});var inputSearch=document.querySelector("header .search input");inputSearch.addEventListener("submit",loadData),inputSearch.addEventListener("keyup",function(e){if(13===e.keyCode){var r=document.querySelector("header .search input"),t=r.value;loadData(t),window.location.hash=t}});var ul=document.querySelector(".history ul");ul.addEventListener("click",function(){if(event.target.matches("li")){var e=document.querySelector("header .search input"),r=event.target.innerHTML;e.value=r,window.location.hash=r,loadData(r)}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
